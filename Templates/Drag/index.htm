<!doctype html>
<html lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>ARIA Drag and Drop - Apex 4X Technical Style Guide</title>
    <meta name="description" content="Scalable ARIA Components" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      type="text/css"
      href="../_common/_doc_files/css/global.css"
    />
    <link
      rel="stylesheet"
      type="text/css"
      href="../_common/_doc_files/prism.css"
    />
    <link
      rel="stylesheet"
      type="text/css"
      href="../_common/_doc_files/css/components-style.css"
    />
    <script src="../_common/_doc_files/prism.js"></script>
  </head>

  <body>
    <div class="outer-wrapper">
      <header class="header">
        <div class="logo">
          <a href="https://whatsock.com">
            <img
              alt="WhatSock : Changing the world one step at a time"
              src="/Templates/_common/_doc_files/img/whatsock.svg"
            />
          </a>
        </div>
      </header>
      <div class="wrapper">
        <main id="main" class="main">
          <h1><strong>ARIA Drag and Drop</strong></h1>
          <nav class="navigation--parent">
            <p>
              <a href="/Tutorials/Beginner-Introduction.htm"
                >Beginner Tutorial</a
              >
            </p>
            <h2 class="parent--page">Template Examples</h2>
            <ul>
              <li><a href="../index.htm">Back to Components</a></li>
              <li><a href="Copy/index.htm">Copy</a></li>
              <li><a href="Move/index.htm">Move</a></li>
              <li><a href="Simple/index.htm">Simple</a></li>
              <li><a href="Sort/index.htm">Sort</a></li>
            </ul>
          </nav>

          <section class="section--instructions">
            <h2>Expected behaviors</h2>

            <p>
              Move focus between each menu button icon, press Space, Enter, or
              Down to open the dropdown menu, arrow to and activate the desired
              drop target.
            </p>

            <p>
              The 4X ARIA Drag module automatically configures all required ARIA
              attributes and focus handling, in strict accordance with the ARIA
              specification.
            </p>

            <h2>HTML syntax</h2>

            <h3>Source</h3>

            <div>
              <pre><code class="language-markup">&lt;div class="source-container">
&lt;div class="draggable">
[Embedded markup for element to drag and drop here.]
&lt;/div>
&lt;/div></code></pre>
            </div>

            <h3>Target</h3>

            <div>
              <pre><code class="language-markup">&lt;div class="target-container">&lt;/div></code></pre>
            </div>

            <p>
              IMPORTANT: Any element that is draggable must be a first child
              element of its source container element, and all draggable
              elements must be wrapped within a container element that supports
              innerHTML such as a div or span element. To ensure accessibility,
              the top level draggable element must never consist of a focusable
              active element such as a link, form field, or simulated active
              element type that is meant to be directly actionable by itself.
              All such controls must instead be wrapped within a draggable div
              element which is the first child of the source container element.
              This is necessary to ensure that the keyboard accessible menu
              button element is rendered within the correct context element
              during execution.
            </p>

            <h2>JavaScript syntax</h2>

            <div>
              <pre><code class="language-javascript">var drake = $A.setDrag({
// Configure functionality key / value mappings
});

// Returns a Drake instance that supports all functionality provided by DragulaJS, including all related event emitters specified at: https://github.com/bevacqua/dragula

drake.on("drag", function(dragElement, source) {
// "dragElement" was lifted from "source"
})
drake.on("dragend", function(dragElement) {
// Dragging event for "dragElement" ended with either "cancel", "remove", or "drop"
})
.on("drop", function(dragElement, target, source, sibling) {
// "dragElement" was dropped into "target" before a "sibling" element, and originally came from "source"
})
.on("cancel", function(dragElement, container, source) {
// "dragElement" was being dragged but it got nowhere and went back into "container", its last stable parent; "dragElement" originally came from "source"
})
.on("remove", function(dragElement, container, source) {
// "dragElement" was being dragged but it got nowhere and it was removed from the DOM. Its last stable parent was "container", and originally came from "source"
})
.on("shadow", function(dragElementClone, container, source) {
// "dragElementClone", _the visual aid shadow_, was moved into "container". May trigger many times as the position of "dragElementClone" changes, even within the same "container"; "dragElementClone" originally came from "source"
})
.on("over", function(dragElementClone, container, source) {
// "dragElementClone" is over "container", and originally came from "source"
})
.on("out", function(dragElementClone, container, source) {
// "dragElementClone" was dragged out of "container" or dropped, and originally came from "source"
})
.on("cloned", function(dragElementClone, originalDragElement, type) {
// DOM element "originalDragElement" was cloned as "dragElementClone", of "type" ('mirror' or 'copy'). Fired for mirror images and when "copy: true"
});</code></pre>
            </div>

            <ul>
              <li>Module file: Drag.js</li>
              <li>
                Requires: Dragula.css, Dragula.js, Velocity.js, VelocityUI.js,
                Animate.js, AccName.js, RovingTabIndex.js, Menu.js.
              </li>
            </ul>

            <h2>Parameters</h2>

            <ol>
              <li>A configuration map to customize behaviors and options</li>
            </ol>

            <h3 tabindex="-1" id="configure">Configuration</h3>

            <div>
              <pre><code class="language-javascript">{

// Specify where dragged elements will be inserted within the drop target container element.
// Applicable when using the keyboard to perform a manual drag and drop action using the accessible ARIA dropdown menu button.
// Must be either "prepend" or "append".
render: "append",

// Specify if draggable elements within the same container can be sorted.
sort: false,

// Configure options for the Dragula instance declaration.
// Based on DragulaJS by Nicolas Bevacqua: https://bevacqua.github.io/dragula/
dragula: {

// Specify the container elements where the first level children will become draggable.
containers: [dragContainerElement, dropContainerElement],

// Optionally prevent dragging when specified conditions are returned as true.
invalid: function(dragElement, handle) {
// 'handle' is the element that is clicked, 'dragElement' is the full draggable element.
return false; // don't prevent any drags from initiating by default
},

// Optionally prevent dropping when specified conditions are returned as false.
accepts: function(dragElement, target, source, sibling) {
return source !== target; // Prevent source from referencing itself as a drop target by default.
},

direction: 'vertical', // Y axis is considered when determining where an element would be dropped

copy: false, // elements are moved by default, not copied
copySortSource: false, // elements in copy-source containers can be reordered

revertOnSpill: true, // spilling will put the element back where it was dragged from, if this is true
removeOnSpill: false, // spilling will remove the element, if this is true

slideFactorX: 0, // allows users to select the amount of movement on the X axis before it is considered a drag instead of a click
slideFactorY: 0, // allows users to select the amount of movement on the Y axis before it is considered a drag instead of a click

},

// Specify configuration options for the accessible menu that ensures integrated accessibility for screen reader and keyboard-only users.
menu: {

tag: {

// Specify the basic element markup for the dropdown menu button triggering element.
// Accessible keyboard support and ARIA markup will be added programmatically when rendered.
button: '&lt;a aria-label="Actions" class="aria-action-menu-button">&darr;&lt;/a>',

// Specify where the dropdown menu button will be rendered within the dragElement.
// Must be either "prepend" or "append".
render: "append",

// Specify the basic element markup for the dropdown menu element.
// This must match the supported element structure for the 4X ARIA Menu module.
menu: '&lt;ul hidden class="drag top menu">&lt;/ul>',

// Specify the basic element markup for the dropdown menu child drop target elements.
// This must match the supported element structure for the 4X ARIA Menu module.
// The data-action attribute specifies the 'action' type that is passed to various event handlers for customization.
move: '&lt;li>&lt;a data-action="move" class="menu-action move">Move to %DROPNAME%&lt;/a>&lt;/li>',
copy: '&lt;li>&lt;a data-action="copy" class="menu-action copy">Copy to %DROPNAME%&lt;/a>&lt;/li>',
// Directional menu items for use when sorting within the same 'source' container element.
// Directional references will automatically be adjusted based on the layout of the draggable elements within the source container.
up: '&lt;li>&lt;a data-action="up" class="menu-action up">Move Up&lt;/a>&lt;/li>',
left: '&lt;li>&lt;a data-action="up" class="menu-action left">Move Left&lt;/a>&lt;/li>',
down: '&lt;li>&lt;a data-action="down" class="menu-action down">Move Down&lt;/a>&lt;/li>',
right: '&lt;li>&lt;a data-action="down" class="menu-action right">Move Right&lt;/a>&lt;/li>',

// Optionally add additional menu items to customize functionality as needed.
// Array may include any number of menu items.
// Use the data-action attribute to differentiate between specific actions when activated.
custom: [
'&lt;li>&lt;a data-action="customActionType" class="menu-action whatever">Do Something&lt;/a>&lt;/li>'
],

// Specify an event handler to process custom menu items as needed when activated.
// 'action' matches the data-action attribute specified within the custom menu item.
customActivate: function(event, dragElement, source, action, actionsObject, nextSibling) {
if (action === "customActionType") alert("Do something!");
},

// Optionally specify conditions to limit when custom menu items are rendered within specific source containers.
// 'action' matches the data-action attribute specified within the custom menu item.
invalid: function(dragElement, action, source) {
return false; // Render within every source container by default.
}

},

// Specify a custom action to execute every time a manual drop is activated using the dropdown menu.
manualDrop: function(dragElement, target, source, action, actionsObject, nextSibling) {
// Do something.
// Then return true to cancel the default drop functionality within Dragula,
// Or return false to continue with the default drop.
return false;
},

// Optionally specify a render and remove animation effect for the menu.
// Powered by Velocity.js.
// View implementations within "Templates/Menus" for practical animation usage examples.
animate: {
onRender: function(dc, wrapper, next) {
Velocity(wrapper, "transition.slideUpIn", {
complete: function() {
// Running next() is required to continue executing built-in lifecycle methods such as afterRender() when the animation completes.
next();
}
});
},
onRemove: function(dc, wrapper, next) {
Velocity(wrapper, "transition.slideUpOut", {
complete: function() {
// Running next() is required to continue executing built-in lifecycle methods such as afterRender() when the animation completes.
next();
}
});
}
}

}

}</code></pre>
            </div>
          </section>
        </main>
      </div>
      <footer class="footer">
        <div class="flex-container-row">
          <div class="flex-item">
            <h2>License</h2>
            <p>
              Apex 4X including all template design patterns is distributed
              under the terms of the Open Source Initiative OSI - MIT License,
              and may be freely used for any purpose within any web technology.
            </p>
          </div>
          <div class="flex-item">
            <h2>Resources</h2>
            <ul>
              <li>
                <a target="ext" href="https://github.com/WhatSock/apex"
                  >Apex 4X on GitHub</a
                >
              </li>
              <li>
                <a
                  target="ext"
                  href="https://whatsock.github.io/visual-aria/github-bookmarklet/visual-aria.htm"
                  >Visual ARIA Bookmarklet</a
                >
              </li>
              <li>
                <a
                  target="ext"
                  href="https://chrome.google.com/webstore/detail/visual-aria/lhbmajchkkmakajkjenkchhnhbadmhmk"
                  >Visual ARIA Chrome Extension</a
                >
              </li>
              <li>
                <a
                  target="ext"
                  href="https://addons.mozilla.org/en-US/firefox/addon/visual-aria/"
                  >Visual ARIA Firefox Extension</a
                >
              </li>
              <li>
                <a target="ext" href="https://github.com/AccDC/visual-aria"
                  >Visual ARIA on GitHub</a
                >
              </li>
              <li>
                <a target="ext" href="https://whatsock.com/training/matrices/"
                  >ARIA Role Conformance Matrices</a
                >
              </li>
              <li>
                <a target="ext" href="https://whatsock.com/training/"
                  >Accessibility Tree Training Guide</a
                >
              </li>
            </ul>
          </div>
          <div class="flex-item">
            <h2>Acknowledgements</h2>
            <ul class="list--horizontal">
              <li>
                Author and developer:
                <a target="ext" href="https://www.linkedin.com/in/bgaraventa"
                  >Bryan Garaventa</a
                >
              </li>
              <li>
                Website designer:
                <a target="ext" href="https://gericci.me/">Angela Ricci</a>
              </li>
              <li>
                Style and markup editor:
                <a
                  target="ext"
                  href="https://www.linkedin.com/in/laurence-lewis-77520365/"
                  >Laurence Lewis</a
                >
              </li>
            </ul>
          </div>
        </div>
      </footer>
    </div>
  </body>

  <script
    async
    src="https://api.whatsock.com/accdc-updates.js?4x=template"
  ></script>
</html>
